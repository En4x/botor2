<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	default-init-method="defaultInit"
	default-destroy-method="defaultDestroy"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<context:component-scan base-package="com.epam.botor.domain" />
	<context:component-scan base-package="com.epam.botor.config" />
<!-- 	<bean class="com.epam.botor.config.StarWarsConfig"/> -->
	
	<context:property-placeholder location="classpath:starwars.properties"/> 

	
	
<!-- 	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer"> -->
<!-- 		<property name="customEditors"> -->
<!-- 			<map> -->
<!--  				<entry key="com.epam.botor.domain.LightSabre" value="com.epam.botor.propertyeditors.LightSabreEditor" />  -->
<!-- 				<entry key="java.lang.String" value="com.epam.botor.propertyeditors.MyStringTrimmerEditor" /> -->
<!-- 			</map> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean" -->
<!-- 		autowire="byName"/> -->
	
<!-- 	<util:list id="converters"> -->
<!-- 		<bean class="com.epam.botor.converters.LightSabreConverter"/> -->
<!-- 	</util:list> -->
	
	

<!-- 	<bean class="com.epam.botor.beanpostprocessors.SayRiseBeanPostProcessor" /> -->


<!-- 	<bean class="com.epam.botor.domain.LightSabre" id="lightSabre" -->
<!-- 		init-method="init" destroy-method="destroy2" primary="true" scope="prototype"> -->
<!-- 		<constructor-arg value="LightSabre" /> -->
<!-- 		<constructor-arg value="100" type="int" /> -->
<!-- 	</bean> -->

<!-- 	<bean class="com.epam.botor.domain.LightSabre" id="redSabre" -->
<!-- 		lazy-init="true"> -->
<!-- 		<property name="color" value="RED" /> -->
<!-- 		<constructor-arg value="   red sabre   " type="java.lang.String" /> -->
<!-- 		<constructor-arg value="${lightsabre.red.damage}" type="int"/> -->
<!-- 	</bean> -->

	<bean class="com.epam.botor.domain.LightSabre" id="yellowSabre"
		scope="prototype"
		c:name="yellow sabre" c:damage="${lightsabre.yellow.damage}" p:color="YELLOW"/>

	<bean class="com.epam.botor.domain.LightSabre" id="blueSabre"
		scope="prototype"
		c:name="blue sabre" c:damage="${lightsabre.blue.damage}" p:color="BLUE"/>
		
	<bean class="com.epam.botor.domain.Jedi" id="joda"  autowire-candidate="false">
		<constructor-arg value="MALE" index="1" />
		<constructor-arg ref="jodaName" index="0" />
		<property name="lightSabre" value="Joda slicer, 1000" />
	</bean>


<!-- 	<bean class="com.epam.botor.domain.BlasterPistol" scope="prototype"> -->
<!-- 		<constructor-arg value="Blaster pistol"/> -->
<!-- 		<constructor-arg value="#{ 95 + (T(java.lang.Math).random() * 10.0) }"/> -->
<!-- 	</bean> -->
	
	<bean class="com.epam.botor.domain.Jedi" id="obiVanKenobi" autowire="byType" autowire-candidate="false">
		<constructor-arg value="MALE" type="com.epam.botor.domain.Gender" />
		<constructor-arg value="Obi Van Kenobi" type="java.lang.String" />
<!-- 		<property name="padavan" ref="anakin" /> -->
<!-- 		<property name="lightSabre" ref="lightSabre" /> -->
	</bean>

	<bean class="com.epam.botor.domain.Jedi" id="anakin" primary="true">
		<constructor-arg value="    Anakin Skywalker   " />
		<constructor-arg value="MALE" />
		<property name="lightSabre">
			<bean class="com.epam.botor.domain.LightSabre">
				<constructor-arg value="Anakin's light sabre" />
				<constructor-arg value="10000" type="int"/>
			</bean>
		</property>
	</bean>

<!-- 	<bean class="com.epam.botor.domain.Jedi" id="darthVader"  autowire-candidate="false"> -->
<!-- 		<constructor-arg value="MALE" name="gender" /> -->
<!-- 		<constructor-arg value="Darth Vader" name="name" /> -->
<!-- 		<property name="lightSabre" ref="lightSabre" /> -->
<!-- 	</bean> -->

	<util:constant id="darkLeaderName" static-field="com.epam.botor.domain.Jedi.THE_NAME_OF_THE_DARK_LEADER"/>
	<bean class="com.epam.botor.domain.Jedi" id="gezaGizner"  autowire-candidate="false">
		<constructor-arg ref="darkLeaderName" name="name" />
		<constructor-arg value="MALE" name="gender" />
		<property name="lightSabre" ref="blueSabre" />
	</bean>


	<bean class="com.epam.botor.domain.Jedi" factory-method="createJediMaster"
		id="sidius"  autowire-candidate="false">
		<constructor-arg value="Sidius" />
		<constructor-arg ref="darthVader" />
		<property name="lightSabre" ref="lightSabre"/>
	</bean>


	<bean class="com.epam.botor.domain.LightSabre" factory-bean="obiVanKenobi"
		factory-method="createUglyLightSabre" id="uglyLightSabre"  autowire-candidate="false">
		<constructor-arg value="1000" />
	</bean>

	<bean class="com.epam.botor.domain.LightSabre" id="freeMemoryLightSabre">
		<constructor-arg value="Free memory light sabre" />
		<constructor-arg ref="runtime" />
	</bean>

	<bean class="java.lang.Runtime" factory-method="getRuntime" id="runtime" />

	<bean id="jodaName" class="java.lang.String">
		<constructor-arg type="String" value="   Mr. Joda   " />
	</bean>
	
	<!-- Army of light -->
	<util:list id="lightFighters">
		<ref bean="obiVanKenobi"/>
		<ref bean="anakin"/>
		<ref bean="trooper"/>
		<ref bean="trooper"/>
		<ref bean="trooper"/>
		<ref bean="trooper"/>
	</util:list>
	
	
	
	<bean class="com.epam.botor.domain.Army" id="armyOfLight">
 		<constructor-arg ref="joda"/> 
		<constructor-arg ref="lightFighters"/>
	</bean>
	
	<!-- Army of dark -->
<!-- 	<bean class="com.epam.botor.domain.Trooper" name="trooper" scope="prototype" autowire-candidate="false"> -->
<!-- 		<constructor-arg value="no name trooper"/> -->
<!-- 		<constructor-arg value="MALE"/> -->
<!-- 	</bean> -->
	
	<bean class="com.epam.botor.domain.Army" id="armyOfDark">
		<constructor-arg ref="gezaGizner"/>
		<constructor-arg>
			<util:set>
				<ref bean="darthVader"/>
				<ref bean="sidius"/>
				<ref bean="trooper"/>
				<ref bean="trooper"/>
				<ref bean="trooper"/>
				<ref bean="trooper"/>
				<ref bean="trooper"/>
			</util:set>				
		</constructor-arg>
		<property name="leader.lightSabre" value="Dark army leader sabre, 300"/>
	</bean>
	
	<bean class="com.epam.botor.domain.Army">
		<constructor-arg ref="obiVanKenobi" />
		<constructor-arg
			value="#{@lightFighters.?[#this.class.simpleName eq 'Jedi']}" />
	</bean>
	
	<!-- The Battle -->
<!-- 	<bean class="com.epam.botor.domain.Battleground" id="dryBattleground"> -->
<!-- 		<constructor-arg value="dry battle ground"/> -->
<!-- 		<constructor-arg value="DRY"/> -->
<!-- 	</bean> -->
	<bean class="com.epam.botor.domain.Battleground" id="wetBattleground">
		<qualifier value="defaultBattleGround"/>
		<constructor-arg value="wet battle ground"/>
		<constructor-arg value="WET"/>
	</bean>
	
	<util:map id="armiesOfBattle">
		<entry key="armyOfLight" value-ref="armyOfLight"/>
		<entry key="armyOfDark" value-ref="armyOfDark"/>
	</util:map>
	
<!-- 	<bean class="com.epam.botor.domain.Battle"/> -->
					
	<!--  Factory bean -->
<!-- 	<bean id="commonBlaster" class="com.epam.botor.domain.BlasterFactoryBean" c:name="blaster" c:damage="100"/> -->
					
	<!-- Map example -->
	<bean id="map" class="java.util.HashMap" >
	    <constructor-arg>
	        <map>
	            <entry key-ref="trooper" value="First" />
	            <entry key-ref="trooper" value="Second" />
	        </map>
	    </constructor-arg>
	</bean>
    
    <util:map id="map2" map-class="java.util.concurrent.ConcurrentHashMap">
    	<entry key-ref="trooper" value="First"/>
    	<entry key-ref="trooper" value="Second"/>
    </util:map>
</beans>


